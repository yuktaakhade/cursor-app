name: CI/CD to GKE

on:
  workflow_run:
    workflows: ["Provision GCP Infra with Terraform"]
    types:
      - completed
      
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  REPOSITORY: eshop-docker-repo
  IMAGE: eshop
  CLUSTER_NAME: e-shopping-cluster
  CLUSTER_LOCATION: us-central1-c
  
jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: python -m unittest test_app.py

      
    - name: Check coverage
      run: |
        pip install coverage
        coverage run --source=. -m unittest test_app.py
        coverage report -m

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: '${{ secrets.GCP_WIF_PROVIDER }}'
        service_account: '${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}'
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: Wait for GKE cluster to be ready
      run: |
        for i in {1..10}; do
          if gcloud container clusters describe $CLUSTER_NAME --region $CLUSTER_LOCATION; then
            echo "Cluster is ready!"
            break
          else
            echo "Waiting for cluster to be ready..."
            sleep 30
          fi
        done
    - name: Get GKE credentials
      run: gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_LOCATION
    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/secret.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml
        kubectl apply -f k8s/hpa.yaml
        kubectl rollout status deployment/eshop-app -n eshop 