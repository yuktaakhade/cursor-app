name: CI/CD to GKE

on:
  workflow_run:
    workflows: ["Provision GCP Infra with Terraform"]
    types:
      - completed

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  REPOSITORY: eshop-docker-repo
  IMAGE: eshop
  CLUSTER_NAME: e-shopping-cluster
  CLUSTER_LOCATION: us-central1-c
  

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run unit tests
      run: python -m unittest test_app.py
    - name: Check coverage
      run: |
        pip install coverage
        coverage run --source=. -m unittest test_app.py
        coverage report -m
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ secrets.GCP_WIF_PROVIDER }}'
        service_account: '${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}'
    - name: Get GKE credentials
      run: gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_LOCATION
    - name: Deploy to GKE (rolling update, cost-effective)
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/secret.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml
        kubectl apply -f k8s/hpa.yaml
        kubectl rollout status deployment/eshop-app -n eshop
      # Cost-effective tip: Ensure resource requests/limits are set in deployment.yaml and HPA is enabled to avoid over-provisioning. 